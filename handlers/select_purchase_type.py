from aiogram import Router, F
from aiogram.enums import ParseMode
from aiogram.types import Message, ReplyKeyboardRemove
from handlers.status import User_Status
from keyboards.for_questions import get_retail_or_wholesale
from keyboards.for_opt import select_opt_option
from keyboards.for_retail import select_retail_option
from keyboards.start_menu import get_start_menu
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from utils.database import add_user

router = Router()  # [1]


@router.message(Command("start"))  # [2]
async def cmd_start(message: Message, state: FSMContext):
    user = message.from_user
    msg = await message.answer("–ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –¥–ª—è –í–∞—Å...")
    add_user(user)
    await msg.delete()
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞ —Å–≤—è–∑–∏ –∫–æ–º–∞–Ω–¥–∞ ¬´–ú—è–≥–∫–∏–π —Å–æ–Ω¬ª! –ú—ã —Å–¥–µ–ª–∞–ª–∏ —ç—Ç–æ–≥–æ –±–æ—Ç–∞, —á—Ç–æ –±—ã –í—ã —Å–º–æ–≥–ª–∏ —Ä–µ—à–∞—Ç—å –≤—Å–µ –í–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã 24/7. –≠—Ç–æ –æ—á–µ–Ω—å —É–¥–æ–±–Ω–æüëè\n\n"
        "–° –ø–æ–º–æ—â—å—é –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ –í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π!",
        reply_markup=get_start_menu()
    )
    await message.delete()
    await state.clear()


@router.message(StateFilter(None), F.text.lower() == "–Ω–∞—á–∞—Ç—å")
async def start_select(message: Message, state: FSMContext):
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é —Å–Ω–∏–∑—Éüëá",
        reply_markup=get_retail_or_wholesale()
    )
    await state.set_state(User_Status.start)



@router.message(User_Status.start, F.text.lower() == "–æ–ø—Ç")
async def answer_opt(message: Message, state: FSMContext):
    await message.answer(
        text=" <b>¬´–ú—è–≥–∫–∏–π —Å–æ–Ω¬ª - –∫–æ–º–ø–∞–Ω–∏—è —Å –∏—Å—Ç–æ—Ä–∏–µ–π.</b>\n\n"
             "–°–µ–π—á–∞—Å —ç—Ç–æ –∫—Ä—É–ø–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –ø—Ä–æ–∏–∑–≤–æ–¥—è—â–µ–µ —Ç—ã—Å—è—á–∏ –µ–¥–∏–Ω–∏—Ü –ø—Ä–æ–¥—É–∫—Ü–∏–∏.\n\n"
             "‚úÖ–ú—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –Ω–∞—à—É –ø—Ä–æ–¥—É–∫—Ü–∏—é, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –±–æ–≥–∞—Ç–æ–º –æ–ø—ã—Ç–µ, –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É—è—Å—å –Ω–∞ –≤—ã—Å–æ–∫–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è —Ä—ã–Ω–∫–∞.\n\n"
             "<b>–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –í—ã —Å—Ç–∞–ª–∏ –Ω–∞—à–∏–º –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º –∏ –Ω–∞–¥–µ–µ–º—Å—è –Ω–∞ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ ü§ùüèº</b>\n\n"
             "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –≤–æ–ø—Ä–æ—Å, –Ω–∞–∂–∞—Ç–∏–µ–º –∫–Ω–æ–ø–∫–∏ ‚¨áÔ∏è",
        reply_markup=select_opt_option(),
        parse_mode=ParseMode.HTML
    )
    await state.set_state(User_Status.selected_opt)


@router.message(User_Status.start, F.text.lower() == "—Ä–æ–∑–Ω–∏—Ü–∞")
async def answer_retail(message: Message, state: FSMContext):
    await message.answer(
        text=" <b>¬´–ú—è–≥–∫–∏–π —Å–æ–Ω¬ª - –∫–æ–º–ø–∞–Ω–∏—è —Å –∏—Å—Ç–æ—Ä–∏–µ–π.</b>\n\n"
             "–°–µ–π—á–∞—Å —ç—Ç–æ –∫—Ä—É–ø–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –ø—Ä–æ–∏–∑–≤–æ–¥—è—â–µ–µ —Ç—ã—Å—è—á–∏ –µ–¥–∏–Ω–∏—Ü –ø—Ä–æ–¥—É–∫—Ü–∏–∏.\n\n"
             "‚úÖ–ú—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –Ω–∞—à—É –ø—Ä–æ–¥—É–∫—Ü–∏—é, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –±–æ–≥–∞—Ç–æ–º –æ–ø—ã—Ç–µ, –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É—è—Å—å –Ω–∞ –≤—ã—Å–æ–∫–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è —Ä—ã–Ω–∫–∞.\n\n"
             "<b>–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –í—ã —Å—Ç–∞–ª–∏ –Ω–∞—à–∏–º –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º üòä –∏ —Å —Ä–∞–¥–æ—Å—Ç—å—é –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã!</b> \n\n"
             "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –≤–æ–ø—Ä–æ—Å, –Ω–∞–∂–∞—Ç–∏–µ–º –∫–Ω–æ–ø–∫–∏ ‚¨áÔ∏è",
        reply_markup=select_retail_option(),
        parse_mode=ParseMode.HTML
    )
    await state.set_state(User_Status.selected_retail)