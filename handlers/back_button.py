from aiogram import Router, F
from aiogram.enums import ParseMode
from aiogram.types import Message, ReplyKeyboardRemove, FSInputFile
from aiogram.utils.media_group import MediaGroupBuilder

from handlers.status import User_Status
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext

from keyboards.for_opt import select_opt_option
from keyboards.for_questions import get_retail_or_wholesale
from keyboards.for_retail import select_retail_option
from keyboards.restart_menu import get_restart_menu
from keyboards.for_care import select_care

router = Router()  # [1]


@router.message(User_Status.selected_retail, F.text.lower() == "–Ω–∞–∑–∞–¥")
async def one_step_return(message: Message, state: FSMContext):
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é —Å–Ω–∏–∑—Éüëá",
        reply_markup=get_retail_or_wholesale()
    )
    await state.set_state(User_Status.start)


@router.message(User_Status.selected_opt, F.text.lower() == "–Ω–∞–∑–∞–¥")
async def one_step_return(message: Message, state: FSMContext):
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é —Å–Ω–∏–∑—Éüëá",
        reply_markup=get_retail_or_wholesale()
    )
    await state.set_state(User_Status.start)


@router.message(User_Status.selected_care_by_retail, F.text.lower() == "–Ω–∞–∑–∞–¥")
async def one_step_return(message: Message, state: FSMContext):
    await message.answer(
        text=" <b>¬´–ú—è–≥–∫–∏–π —Å–æ–Ω¬ª - –∫–æ–º–ø–∞–Ω–∏—è —Å –∏—Å—Ç–æ—Ä–∏–µ–π.</b>\n\n"
             "–°–µ–π—á–∞—Å —ç—Ç–æ –∫—Ä—É–ø–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –ø—Ä–æ–∏–∑–≤–æ–¥—è—â–µ–µ —Ç—ã—Å—è—á–∏ –µ–¥–∏–Ω–∏—Ü –ø—Ä–æ–¥—É–∫—Ü–∏–∏.\n\n"
             "‚úÖ–ú—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –Ω–∞—à—É –ø—Ä–æ–¥—É–∫—Ü–∏—é, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –±–æ–≥–∞—Ç–æ–º –æ–ø—ã—Ç–µ, –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É—è—Å—å –Ω–∞ –≤—ã—Å–æ–∫–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è —Ä—ã–Ω–∫–∞.\n\n"
             "<b>–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –í—ã —Å—Ç–∞–ª–∏ –Ω–∞—à–∏–º –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º üòä –∏ —Å —Ä–∞–¥–æ—Å—Ç—å—é –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã!</b> \n\n"
             "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –≤–æ–ø—Ä–æ—Å, –Ω–∞–∂–∞—Ç–∏–µ–º –∫–Ω–æ–ø–∫–∏ ‚¨áÔ∏è",
        reply_markup=select_retail_option(),
        parse_mode=ParseMode.HTML
    )
    await state.set_state(User_Status.selected_retail)


@router.message(User_Status.selected_care_by_opt, F.text.lower() == "–Ω–∞–∑–∞–¥")
async def one_step_return(message: Message, state: FSMContext):
    await message.answer(
        text=" <b>¬´–ú—è–≥–∫–∏–π —Å–æ–Ω¬ª - –∫–æ–º–ø–∞–Ω–∏—è —Å –∏—Å—Ç–æ—Ä–∏–µ–π.</b>\n\n"
             "–°–µ–π—á–∞—Å —ç—Ç–æ –∫—Ä—É–ø–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –ø—Ä–æ–∏–∑–≤–æ–¥—è—â–µ–µ —Ç—ã—Å—è—á–∏ –µ–¥–∏–Ω–∏—Ü –ø—Ä–æ–¥—É–∫—Ü–∏–∏.\n\n"
             "‚úÖ–ú—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –Ω–∞—à—É –ø—Ä–æ–¥—É–∫—Ü–∏—é, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –±–æ–≥–∞—Ç–æ–º –æ–ø—ã—Ç–µ, –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É—è—Å—å –Ω–∞ –≤—ã—Å–æ–∫–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è —Ä—ã–Ω–∫–∞.\n\n"
             "<b>–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –í—ã —Å—Ç–∞–ª–∏ –Ω–∞—à–∏–º –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º –∏ –Ω–∞–¥–µ–µ–º—Å—è –Ω–∞ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ ü§ùüèº</b>\n\n"
             "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –≤–æ–ø—Ä–æ—Å, –Ω–∞–∂–∞—Ç–∏–µ–º –∫–Ω–æ–ø–∫–∏ ‚¨áÔ∏è",
        reply_markup=select_opt_option(),
        parse_mode=ParseMode.HTML
    )
    await state.set_state(User_Status.selected_opt)


@router.message(User_Status.end_care_by_opt, F.text.lower() == "–Ω–∞–∑–∞–¥")
async def care_to_opt(message: Message, state: FSMContext):
    await message.answer(
        text="–£—Ö–æ–¥ –∑–∞ –∫–∞–∫–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç ? ",
        reply_markup=select_care()
    )
    await state.set_state(User_Status.selected_care_by_opt)


@router.message(User_Status.end_care_by_retail, F.text.lower() == "–Ω–∞–∑–∞–¥")
async def care_to_opt(message: Message, state: FSMContext):
    await message.answer(
        text="–£—Ö–æ–¥ –∑–∞ –∫–∞–∫–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç ? ",
        reply_markup=select_care()
    )
    await state.set_state(User_Status.selected_care_by_retail)


@router.message(User_Status.end_retail, F.text.lower() == "–Ω–∞–∑–∞–¥")
async def one_step_return(message: Message, state: FSMContext):
    await message.answer(
        text=" <b>¬´–ú—è–≥–∫–∏–π —Å–æ–Ω¬ª - –∫–æ–º–ø–∞–Ω–∏—è —Å –∏—Å—Ç–æ—Ä–∏–µ–π.</b>\n\n"
             "–°–µ–π—á–∞—Å —ç—Ç–æ –∫—Ä—É–ø–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –ø—Ä–æ–∏–∑–≤–æ–¥—è—â–µ–µ —Ç—ã—Å—è—á–∏ –µ–¥–∏–Ω–∏—Ü –ø—Ä–æ–¥—É–∫—Ü–∏–∏.\n\n"
             "‚úÖ–ú—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –Ω–∞—à—É –ø—Ä–æ–¥—É–∫—Ü–∏—é, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –±–æ–≥–∞—Ç–æ–º –æ–ø—ã—Ç–µ, –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É—è—Å—å –Ω–∞ –≤—ã—Å–æ–∫–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è —Ä—ã–Ω–∫–∞.\n\n"
             "<b>–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –í—ã —Å—Ç–∞–ª–∏ –Ω–∞—à–∏–º –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º üòä –∏ —Å —Ä–∞–¥–æ—Å—Ç—å—é –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã!</b> \n\n"
             "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –≤–æ–ø—Ä–æ—Å, –Ω–∞–∂–∞—Ç–∏–µ–º –∫–Ω–æ–ø–∫–∏ ‚¨áÔ∏è",
        reply_markup=select_retail_option(),
        parse_mode=ParseMode.HTML
    )
    await state.set_state(User_Status.selected_retail)


@router.message(User_Status.end_opt, F.text.lower() == "–Ω–∞–∑–∞–¥")
async def one_step_return(message: Message, state: FSMContext):
    await message.answer(
        text=" <b>¬´–ú—è–≥–∫–∏–π —Å–æ–Ω¬ª - –∫–æ–º–ø–∞–Ω–∏—è —Å –∏—Å—Ç–æ—Ä–∏–µ–π.</b>\n\n"
             "–°–µ–π—á–∞—Å —ç—Ç–æ –∫—Ä—É–ø–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –ø—Ä–æ–∏–∑–≤–æ–¥—è—â–µ–µ —Ç—ã—Å—è—á–∏ –µ–¥–∏–Ω–∏—Ü –ø—Ä–æ–¥—É–∫—Ü–∏–∏.\n\n"
             "‚úÖ–ú—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –Ω–∞—à—É –ø—Ä–æ–¥—É–∫—Ü–∏—é, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –±–æ–≥–∞—Ç–æ–º –æ–ø—ã—Ç–µ, –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É—è—Å—å –Ω–∞ –≤—ã—Å–æ–∫–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è —Ä—ã–Ω–∫–∞.\n\n"
             "<b>–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –í—ã —Å—Ç–∞–ª–∏ –Ω–∞—à–∏–º –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º –∏ –Ω–∞–¥–µ–µ–º—Å—è –Ω–∞ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ ü§ùüèº</b>\n\n"
             "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –≤–æ–ø—Ä–æ—Å, –Ω–∞–∂–∞—Ç–∏–µ–º –∫–Ω–æ–ø–∫–∏ ‚¨áÔ∏è",
        reply_markup=select_opt_option(),
        parse_mode=ParseMode.HTML
    )
    await state.set_state(User_Status.selected_opt)
